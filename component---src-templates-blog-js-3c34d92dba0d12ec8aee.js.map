{"version":3,"sources":["webpack:///./src/templates/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/prime.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_markdown__WEBPACK_IMPORTED_MODULE_2__","react_markdown__WEBPACK_IMPORTED_MODULE_2___default","date_fns__WEBPACK_IMPORTED_MODULE_3__","_utils_prime__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","id","source","toString","this","Blog","props","usePreview","prime","a","createElement","title","datetime","_meta","updatedAt","format","body","to","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","data","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","endpoint","httpLink","HttpLink","uri","fetch","withToken","setContext","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","mark","_callee","input","b","wrap","_context","prev","next","getPreviewHeaders","t0","sent","abrupt","headers","stop","_x","_x2","apply","arguments","errorLink","onError","_ref2","graphQLErrors","networkError","map","_ref3","message","locations","path","console","log","client","ApolloClient","link","ApolloLink","from","cache","InMemoryCache","_ref4","_callee2","url","res","_context2","window","location","search","substr","split","reduce","acc","item","_item$split$map","decodeURIComponent","key","value","hasOwnProperty","credentials","then","json","localStorage","setItem","accessToken","document","getItem","x-prime-token","x-prime-preview","isPreview","clearPreview","removeItem","reload","_React$useState","useState","setData","useEffect","getIsolatedQuery","variables","pathContext","_ref5","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","href","marginTop","onClick","_755544856","node"],"mappings":"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","file":"component---src-templates-blog-js-3c34d92dba0d12ec8aee.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport ReactMarkdown from 'react-markdown';\nimport { format } from 'date-fns';\n\nimport { usePreview } from '../utils/prime';\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport const query = graphql`\n  query Blog($id: ID!) {\n    prime {\n      Blog(id: $id) {\n        _meta {\n          updatedAt\n        }\n        id\n        title\n        body\n      }\n    }\n  }\n`;\n\nconst Blog = (props) => {\n  const { prime: { Blog } } = usePreview(props, query);\n  return (\n    <Layout>\n      <SEO title={Blog.title} />\n      <time datetime={Blog._meta.updatedAt}>{format(Blog._meta.updatedAt, 'MM/DD/YYYY')}</time>\n      <h1>{Blog.title}</h1>\n      <ReactMarkdown source={Blog.body} />\n      <Link to=\"/\">Go back</Link>\n    </Layout>\n  );\n}\n\nexport default Blog\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { getIsolatedQuery } from 'gatsby-source-graphql-universal';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloLink } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\n\nconst endpoint = 'https://example-prime.herokuapp.com/';\n\nconst httpLink = new HttpLink({\n  uri: `${endpoint}/graphql`,\n  fetch,\n});\n\nconst withToken = setContext(async (input, b) => {\n  return {\n    headers: await getPreviewHeaders(),\n  };\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message, locations, path }) => {\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      );\n    });\n  }\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\n\nexport const client = new ApolloClient({\n  link: ApolloLink.from([errorLink, withToken, httpLink]),\n  cache: new InMemoryCache()\n});\n\nexport const getPreviewHeaders = async () => {\n  const query = window.location.search\n    .substr(1)\n    .split('&')\n    .reduce((acc, item) => {\n      const [key, value] = item.split('=').map(decodeURIComponent);\n      acc[key] = value;\n      return acc;\n    }, {});\n\n  if (query.hasOwnProperty('prime.id')) {\n    const url = `${endpoint}/prime/preview?id=${query['prime.id']}`;\n    const res = await fetch(url, { credentials: 'include' }).then(r => r.json());\n    localStorage.setItem('x-prime-token', res.accessToken);\n    localStorage.setItem('x-prime-preview', res.document.id);\n  }\n\n  if (localStorage.getItem('x-prime-token')) {\n    return {\n      'x-prime-token': localStorage.getItem('x-prime-token'),\n      'x-prime-preview': localStorage.getItem('x-prime-preview'),\n    };\n  }\n\n  return null;\n}\n\nexport const isPreview = () => {\n  return !!localStorage.getItem('x-prime-token');\n}\n\nexport const clearPreview = () => {\n  localStorage.removeItem('x-prime-token');\n  localStorage.removeItem('x-prime-preview');\n  window.location.reload();\n}\n\nexport const usePreview = (props, query) => {\n  const [data, setData] = React.useState(props.data);\n  React.useEffect(() => {\n    client.query({\n      query: getIsolatedQuery(query, 'prime', 'Prime'),\n      variables: props.pathContext,\n    })\n    .then(({ data: prime }) => setData({ prime }))\n  }, []);\n\n  return data;\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport { isPreview, clearPreview } from \"../utils/prime\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            {` and `}\n            <a href=\"https://birkir.github.io/prime\">Prime</a>\n          </footer>\n          <div style={{ marginTop: 16 }}>\n            {isPreview() && <button onClick={clearPreview}>Clear Preview</button>}\n          </div>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}